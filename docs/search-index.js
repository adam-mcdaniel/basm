var searchIndex = new Map(JSON.parse('[["basm",{"t":"PPFFFFPGSFSSSSSPSSSSPPPPPGSSPPPFSTSPSSPPSPPPPPSSSSPSSSSPPPGGSSSSSSSSSSSPFPPPPSSSSSSSSSSSSSSSSSSSPSSFFSPPGPFSSSSSSSSFSSNNNNNNHHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNHNHNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNOOOOOOOOOOOOOOOOOOOOOOOOOOOOCCHHHHHHHHH","n":["Add","Address","BASIC_BLOCK","BASIC_BLOCK_IDS","BASIC_BLOCK_NAMES","BasicBlock","","BasicBlockOp","CALL_SP","CALL_STACK","CALL_STACK_SIZE","CELLS_PER_STACK_ELEMENT","CURRENT_BASIC_BLOCK","CURRENT_BASIC_BLOCK_EQ0","CURRENT_BASIC_BLOCK_EQ1","Call","DYN_OP_TEMP0","DYN_OP_TEMP1","DYN_OP_TEMP2","DYN_SET_TEMP","Dec","DecimalDump","DerefHeap","DerefStack","Div","DynamicLocation","EQUALS_TEMP0","EQUALS_TEMP1","Eq","GetAddr","GetChar","HEAP","HEAP_SIZE","HOME","HP","HexDump","IDX_TEMP","IF_TEMP0","Immediate","Inc","JMP_TEMP","Jmp","JmpIf","Label","Location","Log","MATH_TEMP0","MATH_TEMP1","MATH_TEMP2","MATH_TEMP3","Mul","NEXT_BASIC_BLOCK","NOT_EQUALS_TEMP0","NOT_EQUALS_TEMP1","NULL","Named","Ne","Neg","Op","Operand","PUSH_TEMP","PUT_INT0","PUT_INT1","PUT_INT10","PUT_INT2","PUT_INT3","PUT_INT4","PUT_INT5","PUT_INT6","PUT_INT7","PUT_INT8","Pop","Program","Push","PutChar","PutInt","Quit","R0","R1","R10","R11","R12","R13","R14","R15","R2","R3","R4","R5","R6","R7","R8","R9","REGISTERS","REGISTER_COUNT","REGISTER_NAMES","Return","SET_TEMP","SP","STACK","STACK_HEAP_CALL_STACK","STACK_SIZE","Set","Static","StaticLocation","Sub","Symbol","T0","T1","T2","T3","T4","T5","TAPE_SIZE","TRASH","Table","VAL_TEMP","ZERO","add_const","","addr","","address","allocate","allocate_call_stack","allocate_heap","allocate_registers_and_stack","allocate_string","already_exists","as_str","assemble","","","","assemble_ops","boolean_not","","borrow","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","clone","","","","","","","","","clone_into","","","","","","","","","clone_to_uninit","","","","","","","","","cmp","compile_and_run","compile_and_run_with_input","compile_to_c","compile_to_exe","compile_to_ook","dec","","deref","","","","","","","divide","","end","eq","","","equals","","fmt","","","","","","","","","","","","from","","","","","","","","","","","","","","","","","","","","from_id","from_str","get","get_from","getchar","","global_alloc","goto_next_basic_block","hash","heap_deref","","id","inc","","init_logging","into","","","","","","","","","","","","","","","","len","load_into","minus","","name","named","negate","","new","","","next_basic_block","not_equals","","off","","parse","","partial_cmp","plus","","push","putchar","","putint","","putmsg","refresh","register","","register_name","set","set_const","","","set_from","","simplify_bf","stack_deref","","start","static_binop","static_unop","strip_name","sub_const","","times","","to","to_owned","","","","","","","","","to_string","","","total_size","try_from","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","type_id","","","","","","","","","","","","","","","","unused_id","util","zero","dest","","","","","","","","","lhs","","","","","","negative","offset","rhs","","","","","","src","","","addr","name","ascii","bf","apply_ascii_art_template","apply_template_from_name_or_file","ascii_art_fill","ascii_art_size","check_valid_template","get_template_names","replace_brainfuck_chars","scale_ascii_art","pad_brainfuck_with_comments"],"q":[[0,"basm"],[396,"basm::BasicBlockOp"],[422,"basm::StaticLocation"],[424,"basm::util"],[426,"basm::util::ascii"],[434,"basm::util::bf"],[435,"alloc::string"],[436,"basm::symbol"],[437,"basm::asm"],[438,"core::cmp"],[439,"core::error"],[440,"alloc::boxed"],[441,"core::result"],[442,"std::sync::rwlock"],[443,"std::collections::hash::map"],[444,"core::fmt"],[445,"core::convert"],[446,"core::hash"],[447,"core::option"],[448,"alloc::vec"],[449,"core::ops::function"],[450,"core::any"],[451,"std::io::error"],[452,"basm::bf"],[453,"basm::asm::parse"]],"i":"Ahb````Al````````0````22j03```333``0`3``Bb4`22204````4````344`````````````4`4442```````````````````2`````41`4````````````31313n````Af06Aj5An075C`CbCdCf8<ChClD`8=799:><6543;?2108=79:><;?8=79:><;?8=79:><;?8=79:><9`````><6543210><:9><><;?8=799:>><<6543;?2108=7999:>><<99:<><`=9><9><`6543;?2108=79:><8>><9>><79:7><><`89><8><><>9`>`::><><`><:<<>><><>;?8=79:><9><:6543;?2108=79:><6543;?2108=79:><6543;?2108=79:><9`>EhEjElEnF`FbFdFfFh65431077654310872Fj0```````````","f":"``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{d{b}}f}h}{{{d{j}}f}h}{lb}{lj}{{{d{b}}}l}{ln}{{}n}00{{{d{A`}}}{{Ab{bh}}}}{{{d{A`}}}Ad}{{{d{Af}}}{{d{A`}}}}{{{d{Ah}}}h}{{{d{Aj}}}h}{{{d{Al}}}h}{{{d{An}}}h}0{{bb}h}{{jj}h}{d{{d{c}}}{}}0000000000070000{{{d{B`}}}{{d{B`c}}}{}}000000000000000{{{d{Bb}}}Bb}{{{d{Ah}}}Ah}{{{d{Aj}}}Aj}{{{d{Al}}}Al}{{{d{An}}}An}{{{d{Af}}}Af}{{{d{n}}}n}{{{d{b}}}b}{{{d{j}}}j}{{d{d{B`c}}}Bd{}}00000000{{dBf}Bd}00000000{{{d{Af}}{d{Af}}}Bh}{{hBf}{{Bn{Bd{Bl{Bj}}}}}}{{h{d{A`}}Bf}{{Bn{h{Bl{Bj}}}}}}{{hBf}h}2{hh}{{{d{b}}}h}{{{d{j}}}h}{{{d{C`}}}{{d{{Ab{nnn}}}}}}{{{d{Cb}}}{{d{n}}}}{{{d{Cd}}}{{d{n}}}}{{{d{Cf}}}{{d{n}}}}{{{d{Ch}}}{{d{{Cj{l}}}}}}{{{d{Cl}}}{{d{{Cj{{Cn{AfAn}}}}}}}}{{{d{D`}}}{{d{{Cj{{Cn{lAn}}}}}}}}{{bbb}h}{{jjj}h}{{{d{n}}}b}{{{d{Af}}{d{Af}}}Ad}{{{d{b}}{d{b}}}Ad}{{{d{j}}{d{j}}}Ad}54{{{d{Bb}}{d{B`Db}}}Dd}{{{d{Ah}}{d{B`Db}}}Dd}{{{d{Aj}}{d{B`Db}}}Dd}{{{d{Al}}{d{B`Db}}}Dd}{{{d{An}}{d{B`Db}}}Dd}{{{d{Af}}{d{B`Db}}}Dd}0{{{d{n}}{d{B`Db}}}Dd}{{{d{b}}{d{B`Db}}}Dd}0{{{d{j}}{d{B`Db}}}Dd}0{cc{}}000000000000{hAf}{{{d{A`}}}Af}2{{{d{b}}}h}33{bj}{DfAf}{{{d{A`}}}{{Bn{Afc}}}{}}{{{d{n}}bb}h}{{{d{j}}c}h{{Dh{j}}}}5{{{d{j}}}h}{lb}{{{d{Al}}}h}{{{d{Af}}{d{B`c}}}BdDj}8{jj}{{{d{Af}}}Df};5{{}Bd}{{}c{}}000000000000000{{{d{Aj}}}l}{{{d{b}}b}h}{{bbb}h}{{jjj}h}{{{d{Af}}}{{d{A`}}}}{{b{d{A`}}}b}{{bb}h}{{jj}h}{{{Dl{c}}{Dn{Ah}}}An{{Dh{Af}}}}{{{d{A`}}}Af}{{lb}n}{{{d{An}}}l}98{{bf}b}{{jf}j}{{{d{A`}}}{{Bn{Ajh}}}}0{{{d{Af}}{d{Af}}}{{Dl{Bh}}}}=<{{{d{B`Aj}}Al}Bd}{{{d{b}}}h}{{{d{j}}}h}10{{{d{b}}{d{A`}}}h}{{{d{Af}}}Af}{{{d{A`}}}b}0{l{{d{A`}}}}{{{d{n}}bb}h}{{{d{n}}bDf}h}{{{d{b}}Df}h}{{{d{j}}Df}h}{{{d{b}}b}h}{{{d{j}}c}h{{Dh{j}}}}{hh}{bj}{jj}{{{d{n}}}b}{{cjjj}h{{Eb{bbb}{{E`{h}}}}}}{{cjj}h{{Eb{bb}{{E`{h}}}}}}{bb}{{{d{b}}f}h}{{{d{j}}f}h}{{bbb}h}{{jjj}h}{{{d{b}}}h}{dc{}}00000000{dh}00{{{d{n}}}l}{c{{Bn{e}}}{}{}}000000000000000{{}{{Bn{c}}}{}}000000000000000{dEd}000000000000000{{}Df}`7``````````````````````````````{{{d{A`}}h{d{A`}}}h}{{{d{A`}}h{Dl{{d{A`}}}}}{{Ef{h}}}}{{{d{A`}}ll}h}{{{d{A`}}}{{Ab{ll}}}}{{{d{A`}}}Ad}{{}{{Dn{{d{A`}}}}}}{hh}{{{d{A`}}l}h}{{h{d{A`}}l}h}","D":"Hd","p":[[6,"StaticLocation",0],[1,"reference",null,null,1],[1,"i64"],[5,"String",435],[6,"DynamicLocation",0],[1,"usize"],[5,"Table",0],[1,"str"],[1,"tuple",null,null,1],[1,"bool"],[5,"Symbol",0,436],[6,"BasicBlockOp",0,437],[5,"Program",0,437],[6,"Op",0,437],[5,"BasicBlock",0,437],[0,"mut"],[6,"Operand",0,437],[1,"unit"],[1,"u8"],[6,"Ordering",438],[10,"Error",439],[5,"Box",440,null,1],[6,"Result",441,null,1],[5,"STACK_HEAP_CALL_STACK",0,437],[5,"STACK",0,437],[5,"HEAP",0,437],[5,"CALL_STACK",0,437],[5,"BASIC_BLOCK",0,437],[5,"RwLock",442],[5,"BASIC_BLOCK_NAMES",0,437],[5,"HashMap",443],[5,"BASIC_BLOCK_IDS",0,437],[5,"Formatter",444],[8,"Result",444],[1,"u64"],[10,"Into",445],[10,"Hasher",446],[6,"Option",447,null,1],[5,"Vec",448],[17,"Output"],[10,"Fn",449],[5,"TypeId",450],[8,"Result",451],[15,"Set",396],[15,"GetAddr",396],[15,"Add",396],[15,"Sub",396],[15,"Mul",396],[15,"Div",396],[15,"Neg",396],[15,"Eq",396],[15,"Ne",396],[15,"Named",422]],"r":[[2,437],[3,437],[4,437],[5,437],[7,437],[8,437],[9,437],[10,437],[11,437],[12,437],[13,437],[14,437],[16,437],[17,437],[18,437],[19,437],[26,437],[27,437],[31,437],[32,437],[34,437],[36,437],[37,437],[40,437],[46,437],[47,437],[48,437],[49,437],[51,437],[52,437],[53,437],[54,437],[58,437],[59,437],[60,437],[61,437],[62,437],[63,437],[64,437],[65,437],[66,437],[67,437],[68,437],[69,437],[70,437],[72,437],[77,437],[78,437],[79,437],[80,437],[81,437],[82,437],[83,437],[84,437],[85,437],[86,437],[87,437],[88,437],[89,437],[90,437],[91,437],[92,437],[93,437],[94,437],[95,437],[97,437],[98,437],[99,437],[100,437],[101,437],[106,436],[107,437],[108,437],[109,437],[110,437],[111,437],[112,437],[114,437],[116,437],[117,437],[124,437],[125,437],[126,437],[127,437],[198,452],[199,452],[200,452],[201,452],[202,452],[299,453],[311,437],[313,437],[320,452]],"b":[[225,"impl-Display-for-Symbol"],[226,"impl-Debug-for-Symbol"],[228,"impl-Display-for-StaticLocation"],[229,"impl-Debug-for-StaticLocation"],[230,"impl-Debug-for-DynamicLocation"],[231,"impl-Display-for-DynamicLocation"],[245,"impl-From%3CString%3E-for-Symbol"],[246,"impl-From%3C%26str%3E-for-Symbol"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAHEBGAADABEAFwABABsAAQAgAAMAJQABACkAAwAvAAMANAADADsADABJAAAATQAZAGgAAQBsAAwAewAGAIMAZQD2AAEA+QAAAPwAAwABAQoAHAEDACEBAwAmAQQALAGAAK4BBQA=","P":[[137,"T"],[149,""],[150,"T"],[170,""],[179,"T"],[188,""],[232,"T"],[245,""],[247,"T"],[248,""],[249,"T"],[251,""],[253,"FromStr::Err"],[254,""],[255,""],[256,""],[260,"__H"],[261,""],[267,"U"],[283,""],[291,""],[292,""],[319,""],[320,""],[324,""],[326,""],[332,"T"],[341,""],[345,"U,T"],[361,"U"],[377,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[9344]}