searchState.loadedDescShard("basm", 0, "basm - Brainfuck Assembly\nAdd two operands and store the result in the destination.\nA fixed address on the tape.\nDecrement a dynamic location by an optional amount.\nPrint a decimal dump\nDivide two operands and store the result in the …\nA StaticLocation on a brainfuck tape.\nCheck if two operands are equal and store the result in …\nGet the effective address of a dynamic location and store …\nGet a character from the input and store it in the operand,\nPrint a hexadecimal dump\nA constant value\nIncrement a dynamic location by an optional amount.\nA static location is one of:\nPrint a string literal\nMultiply two operands and store the result in the …\nA named location.\nCheck if two operands are not equal and store the result …\nNegate an operand and store the result in the destination.\n<code>pop R0</code> pops the top of the stack into R0 <code>pop</code> pops the top …\n<code>push R0</code> gets the value of R0 and pushes it onto the stack …\nGet a character operand and print it.\nGet an integer operand and print it.\nSet a dynamic location to a value.\nSubtract two operands and store the result in the …\nA symbol that uses string interning\nA fixed address on the tape.\nA fixed address on the tape.\nBorrow the name of the symbol as a string\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the value at this location\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the name of the symbol as a string\nCreate a new symbol from a string\nCreate a new StaticLocation at the given offset from the …\nMake the ascii art fill the given size with whitespace …")